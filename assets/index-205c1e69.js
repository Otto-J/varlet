import{C as V}from"./index-53c9533a.js";import{v as H}from"./index-1d9e7684.js";import{v as P}from"./index-eacfe014.js";import{H as E,u as $}from"./index-2cf85e75.js";import{u as w,c as B,w as D}from"./components-2d7bbda7.js";import{e as I}from"./logger-525ef361.js";import{u as T}from"./useChildren-eae4425d.js";import{d as L,a as R,b as c,w as z,_ as K,p as m,af as f,D as M,f as h,h as Y,M as C,N as d,R as b,i as j,ag as q,j as Q,O as U,P as A,Q as F,q as G}from"./vue-router-eb3be2d7.js";const k=Symbol("SELECT_BIND_OPTION_KEY");function de(){const{length:e,childProviders:o,bindChildren:n}=T(k);return{length:e,options:o,bindOptions:n}}function J(){const{index:e,parentProvider:o,bindParent:n}=w(k);return n||I("Option","<var-option/> must in <var-select/>"),{index:e,select:o,bindSelect:n}}const W={label:{},value:{}},{n:X,classes:Z}=B("option"),_=L({name:"VarOption",directives:{Ripple:H,Hover:P},components:{VarCheckbox:V,VarHoverOverlay:E},props:W,setup(e){const o=R(!1),n=c(()=>o.value),v=c(()=>e.label),p=c(()=>e.value),{select:u,bindSelect:a}=J(),{multiple:l,focusColor:t,onSelect:r,computeLabel:s}=u,{hovering:S,handleHovering:y}=$(),O=()=>{l.value&&(o.value=!o.value),r(i)},g=()=>r(i),i={label:v,value:p,selected:n,sync:N=>{o.value=N}};return z([()=>e.label,()=>e.value],s),a(i),{n:X,classes:Z,optionSelected:o,multiple:l,focusColor:t,hovering:S,handleHovering:y,handleClick:O,handleSelect:g}}});function x(e,o,n,v,p,u){const a=m("var-checkbox"),l=m("var-hover-overlay"),t=f("ripple"),r=f("hover");return M((h(),Y("div",{class:d(e.classes(e.n(),e.n("$--box"),[e.optionSelected,e.n("--selected-color")])),style:b({color:e.optionSelected?e.focusColor:void 0}),onClick:o[2]||(o[2]=(...s)=>e.handleClick&&e.handleClick(...s))},[C("div",{class:d(e.classes(e.n("cover"),[e.optionSelected,e.n("--selected-background")])),style:b({background:e.optionSelected?e.focusColor:void 0})},null,6),e.multiple?(h(),j(a,{key:0,ref:"checkbox","checked-color":e.focusColor,modelValue:e.optionSelected,"onUpdate:modelValue":o[0]||(o[0]=s=>e.optionSelected=s),onClick:o[1]||(o[1]=q(()=>{},["stop"])),onChange:e.handleSelect},null,8,["checked-color","modelValue","onChange"])):Q("",!0),C("div",{class:d(e.classes(e.n("text"),e.n("$--ellipsis")))},[U(e.$slots,"default",{},()=>[A(F(e.label),1)])],2),G(l,{hovering:e.hovering},null,8,["hovering"])],6)),[[t],[r,e.handleHovering,"desktop"]])}const ee=K(_,[["render",x]]);D(ee);export{ee as O,de as u};
